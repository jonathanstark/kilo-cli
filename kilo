#!/usr/bin/php
<?php
#
# Use a line something like the following to link kilo into your PATH:
# ln -s /Users/jstark/dev/kilo-cli/kilo /Users/jstark/bin/kilo
#
define('KILO_DATABASE', __DIR__ . '/.kilo');
define('KILO_TIMEZONE', 'America/New_York');
define('KILO_TOKEN', @file_get_contents(KILO_DATABASE));
#
$help_text = <<<HELP_TEXT

KILO DOCUMENTATION

The following commands are supported by the kilo cli:

kilo                          // get entries for today
kilo -d <date>                // get entries for date
kilo -de <exercise_id>        // delete exercise by id
kilo -df <food_id>            // delete food by id
kilo -e <exercise> <calories> // create an exercise entry
kilo -f <food> <calories>     // create a food entry
kilo -h                       // this help documentation
kilo -l <email> <password>    // login to the kilo api

Here are a bunch of example commands:

kilo                             // get entries for today
kilo -d yesterday                // get entries for yesterday
kilo -d 2 days ago               // get entries for yesterday
kilo -d 2014-12-31               // get entries for Dec 31, 2014
kilo -de 12345                   // delete exercise by id
kilo -df 12345                   // delete food by id
kilo -e jogging 150              // create an exercise entry
kilo -f bagel 450                // create a food entry
kilo -h                          // this help documentation
kilo -l me@example.com pass12345 // login

NOTES

Creating food entries is the primary action, so as a convenience
you can omit the -f flag, like so:

    kilo bagel 400
    kilo bagel and cream cheese 475

When searching for a date, you can use pretty much any string in the
english language that represents a date, like so:

    kilo -d yesterday
    kilo -d 2 days ago
    kilo -d -3days

When creating food or exercises, kilo assumes last word
is calories. So, the following examples work as expected:

    kilo -f bagel and cream cheese 475
    kilo -e walking the dogs 150

The ampersand character can't be used "naked" as input to
any commands, so it must be quoted or escaped like so:

    kilo -f "bagel & cream cheese" 475
    kilo -f bagel \& cream cheese 475

For more info, you can contact me at jstark@jonathanstark.com


HELP_TEXT;
#
try {
    // print_r($argv);die;
    #
    # Set timezone
    date_default_timezone_set(KILO_TIMEZONE);
    #
    # Branch on input
    if (count($argv) == 1) {
        show_date();
    } else if ($argv[1] == '-d') {
        show_date(implode(' ', array_slice($argv, 2)));
        #
    } else if ($argv[1] == '-de') {
        delete_exercise($argv[2]);
        #
    } else if ($argv[1] == '-df') {
        delete_food($argv[2]);
        #
    } else if ($argv[1] == '-e') {
        create_exercise(array_slice($argv, 2));
        #
    } else if ($argv[1] == '-f') {
        create_food(array_slice($argv, 2));
        #
    } else if ($argv[1] == '-h') {
        die($help_text);
        #
    } else if ($argv[1] == '-l') {
        login($argv[2], $argv[3]);
        #
    } else {
        create_food(array_slice($argv, 1));
    }
    #
} catch (Exception $e) {
    echo "\nkilo: " . $e->getMessage() . ". For help, enter: kilo -h\n\n";
}
#
# We out...
die;

// FUNCTIONS
function create_exercise($values) {
    if (!KILO_TOKEN) {
        throw new Exception("please login and try again", 1);
    }
    if (count($values) < 2) {
        throw new Exception("description and calories are required", 1);
    }
    $calories    = urlencode(array_pop($values));
    $date        = date('Y-m-d');
    $description = urlencode(ucwords(implode(' ', $values)));
    $time        = date('H:i:s');
    $cmd = sprintf(
        'curl -s -X POST -H "Authorization: %s" -d  "calories=%s" -d  "date=%s" -d  "description=%s" -d "time=%s" http://getkilo.com/api/v1/exercises'
        , KILO_TOKEN
        , $calories
        , $date
        , $description
        , $time
    );
    $json = shell_exec($cmd);
    $object = json_decode($json);
    show_date($date);
    return $object;
}
function create_food($values) {
    if (!KILO_TOKEN) {
        throw new Exception("please login and try again", 1);
    }
    if (count($values) < 2) {
        throw new Exception("description and calories are required", 1);
    }
    $calories    = urlencode(array_pop($values));
    $date        = date('Y-m-d');
    $description = urlencode(ucwords(implode(' ', $values)));
    $time        = date('H:i:s');
    $cmd = sprintf(
        'curl -s -X POST -H "Authorization: %s" -d "calories=%s" -d "date=%s" -d "description=%s" -d "time=%s" http://getkilo.com/api/v1/foods'
        , KILO_TOKEN
        , $calories
        , $date
        , $description
        , $time
    );
    $json = shell_exec($cmd);
    $object = json_decode($json);
    show_date($date);
    return $object;
}
function delete_exercise($id) {
    if (!KILO_TOKEN) {
        throw new Exception("please login and try again", 1);
    }
    $cmd = sprintf(
        'curl -s -X DELETE -H "Authorization: %s" http://getkilo.com/api/v1/exercises/id/%s'
        , KILO_TOKEN
        , $id
    );
    $json = shell_exec($cmd);
    $object = json_decode($json);
    show_date();
    return $object;
}
function delete_food($id) {
    if (!KILO_TOKEN) {
        throw new Exception("please login and try again", 1);
    }
    $cmd = sprintf(
        'curl -s -X DELETE -H "Authorization: %s" http://getkilo.com/api/v1/foods/id/%s'
        , KILO_TOKEN
        , $id
    );
    $json = shell_exec($cmd);
    $object = json_decode($json);
    show_date();
    return $object;
}
function login($email_address, $password) {
    if (empty($email_address)) {
        throw new Exception("email address is required", 1);
    }
    if (empty($password)) {
        throw new Exception("password is required", 1);
    }
    $cmd = sprintf(
        'curl -s -X POST -d "email_address=%s" -d "password=%s" http://getkilo.com/api/v1/tokens'
        , $email_address
        , $password
    );
    $json = shell_exec($cmd);
    $object = json_decode($json);
    file_put_contents(KILO_DATABASE, $object->access_token);
    die("\nkilo: you are now logged in\n\n");
}
function show_date($string='') {
    if (!KILO_TOKEN) {
        throw new Exception("please login and try again", 1);
    }
    $string   = (empty($string)) ? 'today' : $string;
    $date     = date('Y-m-d', strtotime($string));
    $cmd      = sprintf(
        'curl -s -X GET -H "Authorization: %s" http://getkilo.com/api/v1/dates/id/%s'
        , KILO_TOKEN
        , $date
    );
    $json    = shell_exec($cmd);
    $object  = json_decode($json);
    $total = 0;
    $template = "%-10s %-20s %8s\n";
    #
    # Start puking...
    echo "\n";
    echo "CALORIES FOR " . strtoupper(date('D M j, Y', strtotime($string))) . "\n";
    echo "\n";
    echo "FOODS\n";
    echo "\n";
    printf($template, 'ID', 'Description', 'Calories');
    foreach ($object->foods as $entry) {
        printf($template, $entry->id, $entry->description, $entry->calories);
        $total+= (int)$entry->calories;
    }
    echo "\n";
    echo "EXERCISES\n";
    echo "\n";
    printf($template, 'ID', 'Description', 'Calories');
    foreach ($object->exercises as $entry) {
        printf($template, $entry->id, $entry->description, $entry->calories);
        $total-= (int)$entry->calories;
    }
    echo "\n";
    printf($template, '', '', 'Total');
    printf($template, '', '', $total);
    echo "\n";
    echo "\n";
}
